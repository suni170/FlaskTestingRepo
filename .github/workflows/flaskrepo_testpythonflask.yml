# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - testpythonflask

on:
  push:
    branches:
      - Flaskrepo
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read 
      id-token: write

    steps:
      - uses: actions/checkout@v4
 
      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: "577b7c0d-8d6e-4402-a074-c2ccf38ad68b"
          tenant-id: "93bcb56b-b8ec-4307-bad7-6bf044b763cb"
          subscription-id: "2d00bd8e-67d1-43ae-9df2-cf9be20447e0"
 
      - name: Retrieve Secret from Azure Key Vault
        id: get-secret
        run: |
                SECRET_VALUE=$(az keyvault secret show --name "ssh-key" --vault-name "demopython" --query "value" -o tsv)
                echo "::add-mask::$SECRET_VALUE"  # Hide secret from logs
                mkdir -p ~/.ssh  
                echo "$SECRET_VALUE" | tr -d '\r' > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                echo "SSH_PRIVATE_KEY_PATH=~/.ssh/id_rsa" >> $GITHUB_ENV
        
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
            ssh-private-key: ${{ env.SSH_PRIVATE_KEY_PATH }}

          
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
 
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1445CB15A781497B89E79C5719E169D1 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F5F1C2D4AF1B47D89F26D0B1248D92CC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F0FA76CE81D94BA49CEE36CBF5A7A403 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'testpythonflask'
          slot-name: 'Production'
          
