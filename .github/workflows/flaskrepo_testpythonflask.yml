name: Build and deploy Python app to Azure Web App - testpythonflask
 
on:

  push:

    branches:

      - Flaskrepo

  workflow_dispatch:
 
env:

  APP_ENV: dev

  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

  GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"

  ZIPFILE: package.zip
 
jobs:

  build:

    runs-on: ubuntu-latest

    permissions:

      contents: read

      id-token: write
 
    steps:

      - name: Checkout Parent Repository with Submodules

        uses: actions/checkout@v3

        with:

          submodules: recursive

          fetch-depth: 0
 
      - name: 'Az CLI login'

        uses: azure/login@v2

        with:
          client-id: "577b7c0d-8d6e-4402-a074-c2ccf38ad68b"
          tenant-id: "93bcb56b-b8ec-4307-bad7-6bf044b763cb"
          subscription-id: "2d00bd8e-67d1-43ae-9df2-cf9be20447e0"
 
      - name: Setup SSH for GitHub

        run: |

          mkdir -p ~/.ssh

          echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

          chmod 600 ~/.ssh/id_rsa

          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
 
      - name: Validate SSH Connection

        run: ssh -o "StrictHostKeyChecking=no" -v git@github.com
 
      - name: Set up Python version

        uses: actions/setup-python@v5

        with:

          python-version: '3.11'
 
      - name: Create Virtual Environment

        run: |

          python -m venv venv

          echo "VIRTUAL_ENV=$PWD/venv" >> $GITHUB_ENV

          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
 
      - name: Install Dependencies

        run: |

          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"

          pip install flask requests==2.26.0 git+ssh://git@github.com/suni170/testing.git@main
 
      - name: Zip artifact for deployment (Including Submodules)

        run: zip -r release.zip . -x '*.git*' 'venv/*' '*.github/*'
 
      - name: Upload artifact

        uses: actions/upload-artifact@v4

        with:

          name: python-app

          path: release.zip
 
  deploy:

    runs-on: ubuntu-latest

    needs: build

    environment:

      name: 'Production'

      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:

      id-token: write

      contents: read
 
    steps:

      - name: Download artifact from build job

        uses: actions/download-artifact@v4

        with:

          name: python-app
 
      - name: Unzip artifact

        run: unzip release.zip
 
      - name: 'Deploy to Azure Web App'

        uses: azure/webapps-deploy@v3

        id: deploy-to-webapp

        with:

          app-name: 'testpythonflask'

          package: release.zip  

 